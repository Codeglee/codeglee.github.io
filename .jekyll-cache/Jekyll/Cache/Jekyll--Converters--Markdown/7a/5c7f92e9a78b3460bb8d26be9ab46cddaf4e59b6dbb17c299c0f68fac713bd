I"H<h3 id="ui-test-automation-continued-where-did-we-get-to">UI test automation continued… where did we get to?</h3>
<p>In the <a href="https://blog.codeglee.com/2022/03/23/an-automation-approach-pt2.html">previous post</a>, we covered encapsulating automation and launch argument constants, encapsulated launch argument configuration for our UI tests and wrapped our interactions and assertions in a Robot screen to make our tests easy to read and understand.</p>

<p>In this post we’ll:</p>

<ul>
  <li>Flesh out our <code class="language-plaintext highlighter-rouge">Onboarding</code> flow views with some more complexity</li>
  <li>We’ll write UI tests for <code class="language-plaintext highlighter-rouge">Onboarding</code> to address the changes in design</li>
  <li>Introduce an in-memory approach to avoid test pollution</li>
</ul>

<h4 id="lets-make-onboarding-a-bit-more-complex">Let’s make onboarding a bit more complex…</h4>

<p>Let’s introduce a 3 stage onboarding process. I’ll model that with</p>

<h3 id="whats-next">What’s next?</h3>

<ul>
  <li>How to handle variability (waiting for .exists), waiting for animation lag etc</li>
  <li>Approaches for Network mocking</li>
  <li>How to fully clean up (delete app from simulator, restart?)</li>
</ul>

<h4 id="what-can-we-improve">What can we improve?</h4>
<p>We’re still using <code class="language-plaintext highlighter-rouge">.rawValue</code> rather than creating typed extensions to ensure strong typing.</p>

<h4 id="what-did-we-cover">What did we cover?</h4>
<ol>
  <li></li>
</ol>

<h3 id="whats-next-1">What’s next?</h3>

<ul>
  <li>We’ll flesh out our <code class="language-plaintext highlighter-rouge">Onboarding</code> flow views</li>
</ul>

<p>I hope this post was informative, feel free to send me your thoughts via Twitter.</p>

<p><strong>Footnotes:</strong></p>

:ET